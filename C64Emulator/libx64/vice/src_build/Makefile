# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




VPATH = /Users/sid/Sources/vice-emu/trunk/vice/src
pkgdatadir = $(datadir)/vice
pkgincludedir = $(includedir)/vice
pkglibdir = $(libdir)/vice
pkglibexecdir = $(libexecdir)/vice
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-apple-darwin11.3.0
host_triplet = x86_64-apple-darwin
bin_PROGRAMS = vsid$(EXEEXT) x64$(EXEEXT) $(am__EXEEXT_1) \
	x128$(EXEEXT) $(am__EXEEXT_2) xvic$(EXEEXT) xpet$(EXEEXT) \
	xplus4$(EXEEXT) xcbm2$(EXEEXT) xcbm5x0$(EXEEXT) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \
	$(am__EXEEXT_8)
EXTRA_PROGRAMS =
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(srcdir)/debug.h.in $(srcdir)/gentranslate_h.sh.in \
	$(srcdir)/version.h.in ChangeLog memcmp.c usleep.c
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = debug.h gentranslate_h.sh version.h
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = x64sc$(EXEEXT)
am__EXEEXT_2 = x64dtv$(EXEEXT)
am__EXEEXT_3 = c1541$(EXEEXT)
am__EXEEXT_4 = petcat$(EXEEXT)
am__EXEEXT_5 = cartconv$(EXEEXT)
am__EXEEXT_6 = x64scow$(EXEEXT)
am__EXEEXT_7 = x64dtvow$(EXEEXT)
#am__EXEEXT_8 = vsidow$(EXEEXT) x64ow$(EXEEXT) \
#	$(am__EXEEXT_6) x128ow$(EXEEXT) $(am__EXEEXT_7) \
#	xvicow$(EXEEXT) xpetow$(EXEEXT) xplus4ow$(EXEEXT) \
#	xcbm2ow$(EXEEXT) xcbm5x0ow$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_c1541_OBJECTS = c1541.$(OBJEXT) cbmdos.$(OBJEXT) charset.$(OBJEXT) \
	findpath.$(OBJEXT) gcr.$(OBJEXT) cbmimage.$(OBJEXT) \
	info.$(OBJEXT) ioutil.$(OBJEXT) lib.$(OBJEXT) log.$(OBJEXT) \
	rawfile.$(OBJEXT) resources.$(OBJEXT) util.$(OBJEXT) \
	zfile.$(OBJEXT) zipcode.$(OBJEXT)
c1541_OBJECTS = $(am_c1541_OBJECTS)
am__DEPENDENCIES_1 = $(top_builddir)/src/arch/unix/blockdev.o
am__DEPENDENCIES_2 = opencbmlib.o \
	$(top_builddir)/src/arch/unix/dynlib.o
c1541_DEPENDENCIES = $(ARCH_EXTRA_OBJECTS) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(vdrive_lib) $(imagecontents_lib) \
	$(fileio_lib) $(diskimage_lib) $(tape_lib) $(serial_lib)
am_cartconv_OBJECTS = cartconv.$(OBJEXT)
cartconv_OBJECTS = $(am_cartconv_OBJECTS)
cartconv_DEPENDENCIES =
am_petcat_OBJECTS = charset.$(OBJEXT) findpath.$(OBJEXT) \
	ioutil.$(OBJEXT) lib.$(OBJEXT) log.$(OBJEXT) petcat.$(OBJEXT) \
	rawfile.$(OBJEXT) resources.$(OBJEXT) util.$(OBJEXT) \
	zfile.$(OBJEXT) zipcode.$(OBJEXT)
petcat_OBJECTS = $(am_petcat_OBJECTS)
petcat_DEPENDENCIES = $(ARCH_EXTRA_OBJECTS) $(fileio_lib)
am__objects_1 = alarm.$(OBJEXT) attach.$(OBJEXT) autostart.$(OBJEXT) \
	autostart-prg.$(OBJEXT) charset.$(OBJEXT) clkguard.$(OBJEXT) \
	clipboard.$(OBJEXT) cmdline.$(OBJEXT) cbmdos.$(OBJEXT) \
	cbmimage.$(OBJEXT) color.$(OBJEXT) crc32.$(OBJEXT) \
	datasette.$(OBJEXT) debug.$(OBJEXT) dma.$(OBJEXT) \
	embedded.$(OBJEXT) event.$(OBJEXT) findpath.$(OBJEXT) \
	fliplist.$(OBJEXT) gcr.$(OBJEXT) info.$(OBJEXT) init.$(OBJEXT) \
	initcmdline.$(OBJEXT) interrupt.$(OBJEXT) ioutil.$(OBJEXT) \
	joystick.$(OBJEXT) kbdbuf.$(OBJEXT) keyboard.$(OBJEXT) \
	lib.$(OBJEXT) libm_math.$(OBJEXT) lightpen.$(OBJEXT) \
	log.$(OBJEXT) machine-bus.$(OBJEXT) machine.$(OBJEXT) \
	main.$(OBJEXT) network.$(OBJEXT) opencbmlib.$(OBJEXT) \
	palette.$(OBJEXT) ram.$(OBJEXT) rawfile.$(OBJEXT) \
	rawnet.$(OBJEXT) resources.$(OBJEXT) romset.$(OBJEXT) \
	screenshot.$(OBJEXT) snapshot.$(OBJEXT) socket.$(OBJEXT) \
	sound.$(OBJEXT) sysfile.$(OBJEXT) translate.$(OBJEXT) \
	traps.$(OBJEXT) util.$(OBJEXT) vsync.$(OBJEXT) zfile.$(OBJEXT) \
	zipcode.$(OBJEXT)
am__objects_2 = maincpu.$(OBJEXT)
am__objects_3 = mouse.$(OBJEXT)
am__objects_4 = midi.$(OBJEXT)
am_vsid_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4)
vsid_OBJECTS = $(am_vsid_OBJECTS)
am__DEPENDENCIES_3 = 
am__DEPENDENCIES_4 =
am__DEPENDENCIES_5 = $(vsid_lib) $(sid_lib) $(monitor_lib) \
	$(driver_libs) $(vicii_lib) $(raster_lib) $(video_lib) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4)
vsid_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(vsid_LDFLAGS) $(LDFLAGS) \
	-o $@
am_vsidow_OBJECTS = maincpu.$(OBJEXT)
vsidow_OBJECTS = $(am_vsidow_OBJECTS)
vsidow_LDADD = $(LDADD)
am_x128_OBJECTS = $(am__objects_1) $(am__objects_3) $(am__objects_4)
x128_OBJECTS = $(am_x128_OBJECTS)
am__DEPENDENCIES_6 = $(c128_lib) $(c64cartsystem_lib) $(c64cart_lib) \
	$(c64commoncart_lib) $(c64c128_lib) $(driveiec_lib) \
	$(driveiec128dcr_lib) $(driveiecieee_lib) \
	$(driveiecc64exp_lib) $(driveieee_lib) $(drive_lib) \
	$(iecbus_lib) $(parallel_lib) $(vdrive_lib) $(sid_lib) \
	$(monitor_lib) $(driver_libs) $(vicii_lib) $(vdc_lib) \
	$(raster_lib) $(rtc_lib) $(userport_lib) $(video_lib) \
	$(am__DEPENDENCIES_3) $(imagecontents_lib) \
	$(am__DEPENDENCIES_4)
x128_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(x128_LDFLAGS) $(LDFLAGS) \
	-o $@
am_x128ow_OBJECTS = maincpu.$(OBJEXT)
x128ow_OBJECTS = $(am_x128ow_OBJECTS)
x128ow_LDADD = $(LDADD)
am_x64_OBJECTS = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4)
x64_OBJECTS = $(am_x64_OBJECTS)
am__DEPENDENCIES_7 = $(c64_lib) $(c64cartsystem_lib) $(c64cart_lib) \
	$(c64commoncart_lib) $(driveiec_lib) $(driveiecieee_lib) \
	$(driveiecc64exp_lib) $(driveieee_lib) $(drive_lib) \
	$(iecbus_lib) $(parallel_lib) $(vdrive_lib) $(sid_lib) \
	$(monitor_lib) $(driver_libs) $(vicii_lib) $(raster_lib) \
	$(rtc_lib) $(userport_lib) $(video_lib) $(am__DEPENDENCIES_3) \
	$(imagecontents_lib) $(am__DEPENDENCIES_4)
x64_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(x64_LDFLAGS) $(LDFLAGS) -o \
	$@
am__objects_5 = ps2mouse.$(OBJEXT)
am_x64dtv_OBJECTS = $(am__objects_1) $(am__objects_5)
x64dtv_OBJECTS = $(am_x64dtv_OBJECTS)
am__DEPENDENCIES_8 = $(c64dtv_lib) $(c64c64dtv_lib) $(driveiec_lib) \
	$(driveiecieee_lib) $(driveiecc64exp_lib) $(driveieee_lib) \
	$(drive_lib) $(iecbus_lib) $(parallel_lib) $(userport_lib) \
	$(vdrive_lib) $(sid_lib) $(monitor_lib) $(driver_libs) \
	$(viciidtv_lib) $(raster_lib) $(rtc_lib) $(video_lib) \
	$(am__DEPENDENCIES_3) $(imagecontents_lib) \
	$(am__DEPENDENCIES_4) $(c64dtvstubs_lib)
x64dtv_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(x64dtv_LDFLAGS) \
	$(LDFLAGS) -o $@
am_x64dtvow_OBJECTS = maincpu.$(OBJEXT)
x64dtvow_OBJECTS = $(am_x64dtvow_OBJECTS)
x64dtvow_LDADD = $(LDADD)
am_x64ow_OBJECTS = maincpu.$(OBJEXT)
x64ow_OBJECTS = $(am_x64ow_OBJECTS)
x64ow_LDADD = $(LDADD)
am_x64sc_OBJECTS = $(am__objects_1) $(am__objects_3) $(am__objects_4)
x64sc_OBJECTS = $(am_x64sc_OBJECTS)
am__DEPENDENCIES_9 = $(c64sc_lib) $(c64cartsystem_lib) $(c64cart_lib) \
	$(c64commoncart_lib) $(driveiec_lib) $(driveiecieee_lib) \
	$(driveiecc64exp_lib) $(driveieee_lib) $(drive_lib) \
	$(iecbus_lib) $(parallel_lib) $(vdrive_lib) $(sid_lib) \
	$(monitor_lib) $(driver_libs) $(viciisc_lib) $(raster_lib) \
	$(rtc_lib) $(userport_lib) $(video_lib) $(am__DEPENDENCIES_3) \
	$(imagecontents_lib) $(am__DEPENDENCIES_4)
x64sc_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(x64sc_LDFLAGS) \
	$(LDFLAGS) -o $@
am_x64scow_OBJECTS = maincpu.$(OBJEXT)
x64scow_OBJECTS = $(am_x64scow_OBJECTS)
x64scow_LDADD = $(LDADD)
am_xcbm2_OBJECTS = $(am__objects_1) $(am__objects_3)
xcbm2_OBJECTS = $(am_xcbm2_OBJECTS)
am__DEPENDENCIES_10 = $(xcbm2_lib) $(driveiecieee_lib) \
	$(driveieee_lib) $(drive_lib) $(parallel_lib) $(vdrive_lib) \
	$(monitor_lib) $(driver_libs) $(sid_lib) $(crtc_lib) \
	$(raster_lib) $(rtc_lib) $(video_lib) $(userport_lib) \
	$(am__DEPENDENCIES_3) $(imagecontents_lib) \
	$(am__DEPENDENCIES_4)
xcbm2_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(xcbm2_LDFLAGS) \
	$(LDFLAGS) -o $@
am_xcbm2ow_OBJECTS = maincpu.$(OBJEXT)
xcbm2ow_OBJECTS = $(am_xcbm2ow_OBJECTS)
xcbm2ow_LDADD = $(LDADD)
am_xcbm5x0_OBJECTS = $(am__objects_1) $(am__objects_3)
xcbm5x0_OBJECTS = $(am_xcbm5x0_OBJECTS)
am__DEPENDENCIES_11 = $(xcbm5x0_lib) $(driveiecieee_lib) \
	$(driveieee_lib) $(drive_lib) $(parallel_lib) $(vdrive_lib) \
	$(monitor_lib) $(driver_libs) $(sid_lib) $(vicii_lib) \
	$(raster_lib) $(rtc_lib) $(video_lib) $(userport_lib) \
	$(am__DEPENDENCIES_3) $(imagecontents_lib) \
	$(am__DEPENDENCIES_4)
xcbm5x0_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(xcbm5x0_LDFLAGS) \
	$(LDFLAGS) -o $@
am_xcbm5x0ow_OBJECTS = maincpu.$(OBJEXT)
xcbm5x0ow_OBJECTS = $(am_xcbm5x0ow_OBJECTS)
xcbm5x0ow_LDADD = $(LDADD)
am_xpet_OBJECTS = $(am__objects_1) $(am__objects_3)
xpet_OBJECTS = $(am_xpet_OBJECTS)
am__DEPENDENCIES_12 = $(pet_lib) $(driveiecieee_lib) $(driveieee_lib) \
	$(drive_lib) $(parallel_lib) $(vdrive_lib) $(monitor_lib) \
	$(driver_libs) $(crtc_lib) $(raster_lib) $(rtc_lib) \
	$(userport_lib) $(video_lib) $(sid_lib) $(am__DEPENDENCIES_3) \
	$(imagecontents_lib) $(am__DEPENDENCIES_4)
xpet_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(xpet_LDFLAGS) $(LDFLAGS) \
	-o $@
am_xpetow_OBJECTS = maincpu.$(OBJEXT)
xpetow_OBJECTS = $(am_xpetow_OBJECTS)
xpetow_LDADD = $(LDADD)
am_xplus4_OBJECTS = $(am__objects_1) $(am__objects_3)
xplus4_OBJECTS = $(am_xplus4_OBJECTS)
am__DEPENDENCIES_13 = $(plus4_lib) $(driveiec_lib) $(driveiecieee_lib) \
	$(driveiecplus4exp_lib) $(drivetcbm_lib) $(drive_lib) \
	$(iecbus_lib) $(vdrive_lib) $(monitor_lib) $(driver_libs) \
	$(sid_lib) $(raster_lib) $(rtc_lib) $(userport_lib) \
	$(video_lib) $(am__DEPENDENCIES_3) $(imagecontents_lib) \
	$(am__DEPENDENCIES_4)
xplus4_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(xplus4_LDFLAGS) \
	$(LDFLAGS) -o $@
am_xplus4ow_OBJECTS = maincpu.$(OBJEXT)
xplus4ow_OBJECTS = $(am_xplus4ow_OBJECTS)
xplus4ow_LDADD = $(LDADD)
am_xvic_OBJECTS = $(am__objects_1) $(am__objects_3) $(am__objects_4)
xvic_OBJECTS = $(am_xvic_OBJECTS)
am__DEPENDENCIES_14 = $(vic20_lib) $(vic20cart_lib) \
	$(c64commoncart_lib) $(mascuerade_lib) $(driveiec_lib) \
	$(driveiecieee_lib) $(driveieee_lib) $(drive_lib) \
	$(iecbus_lib) $(parallel_lib) $(vdrive_lib) $(monitor_lib) \
	$(driver_libs) $(raster_lib) $(rtc_lib) $(userport_lib) \
	$(sid_lib) $(video_lib) $(am__DEPENDENCIES_3) \
	$(imagecontents_lib) $(am__DEPENDENCIES_4)
xvic_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(xvic_LDFLAGS) $(LDFLAGS) \
	-o $@
am_xvicow_OBJECTS = maincpu.$(OBJEXT)
xvicow_OBJECTS = $(am_xvicow_OBJECTS)
xvicow_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
SOURCES = $(c1541_SOURCES) $(cartconv_SOURCES) $(petcat_SOURCES) \
	$(vsid_SOURCES) $(vsidow_SOURCES) $(x128_SOURCES) \
	$(x128ow_SOURCES) $(x64_SOURCES) $(x64dtv_SOURCES) \
	$(x64dtvow_SOURCES) $(x64ow_SOURCES) $(x64sc_SOURCES) \
	$(x64scow_SOURCES) $(xcbm2_SOURCES) $(xcbm2ow_SOURCES) \
	$(xcbm5x0_SOURCES) $(xcbm5x0ow_SOURCES) $(xpet_SOURCES) \
	$(xpetow_SOURCES) $(xplus4_SOURCES) $(xplus4ow_SOURCES) \
	$(xvic_SOURCES) $(xvicow_SOURCES)
DIST_SOURCES = $(c1541_SOURCES) $(cartconv_SOURCES) $(petcat_SOURCES) \
	$(vsid_SOURCES) $(vsidow_SOURCES) $(x128_SOURCES) \
	$(x128ow_SOURCES) $(x64_SOURCES) $(x64dtv_SOURCES) \
	$(x64dtvow_SOURCES) $(x64ow_SOURCES) $(x64sc_SOURCES) \
	$(x64scow_SOURCES) $(xcbm2_SOURCES) $(xcbm2ow_SOURCES) \
	$(xcbm5x0_SOURCES) $(xcbm5x0ow_SOURCES) $(xpet_SOURCES) \
	$(xpetow_SOURCES) $(xplus4_SOURCES) $(xplus4ow_SOURCES) \
	$(xvic_SOURCES) $(xvicow_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /Users/sid/Sources/vice-emu/trunk/vice/missing --run aclocal-1.11
AMTAR = ${SHELL} /Users/sid/Sources/vice-emu/trunk/vice/missing --run tar
AR = ar
ARCH_DIR = $(top_builddir)/src/arch/unix
ARCH_EXTRA_SUBDIR = macosx macosx/cocoa macosx/cocoa/view macosx/cocoa/menu macosx/cocoa/dialog
ARCH_INCLUDES = -I$(top_srcdir)/src/arch/unix/macosx/cocoa/menu -I$(top_srcdir)/src/arch/unix/macosx/cocoa/dialog -I$(top_srcdir)/src/arch/unix/macosx/cocoa/view -I$(top_srcdir)/src/arch/unix/macosx/cocoa -I$(top_srcdir)/src/arch/unix/macosx -I$(top_srcdir)/src/arch/unix 
ARCH_LIBS = $(top_builddir)/src/arch/unix/macosx/cocoa/menu/libarchmacosxcocoamenu.a $(top_builddir)/src/arch/unix/macosx/cocoa/dialog/libarchmacosxcocoadialog.a $(top_builddir)/src/arch/unix/macosx/cocoa/libarchmacosxcocoa.a $(top_builddir)/src/arch/unix/macosx/cocoa/view/libarchmacosxcocoaview.a $(top_builddir)/src/arch/unix/macosx/libarchmacosx.a $(top_builddir)/src/arch/unix/libarch.a 
ARCH_MAKE_BINDIST_DIR = $(top_srcdir)/src/arch/unix/macosx
ARCH_SRC_DIR = $(top_srcdir)/src/arch/unix
AUTOCONF = ${SHELL} /Users/sid/Sources/vice-emu/trunk/vice/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/sid/Sources/vice-emu/trunk/vice/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/sid/Sources/vice-emu/trunk/vice/missing --run automake-1.11
AWK = awk
BINDIR = 
CATALOGS = 
CATOBJEXT = 
CC = /usr/bin/clang -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7
CCAS = /usr/bin/clang -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -O3
CCDEPMODE = depmode=gcc3
CFLAGS = -O3
CPP = /usr/bin/clang -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7 -E
CPPFLAGS = -I/Users/sid/Sources/vice-emu/trunk/vice/extlib/x86_64-10.7-clang/include
CROSS = false
CXX = /usr/bin/clang++ -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7
CXXCPP = /usr/bin/clang++ -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -fno-exceptions
CYGPATH_W = echo
DATADIRNAME = 
DEBUGBUILD = 0
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOS2UNIX = dos2unix
DOS_TFE_PCAP_LIB = 
DYNLIB_LIBS = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EDITLINE_LIBS = -ledit
EGREP = 
EXEEXT = 
FCCACHE = /usr/X11R6/bin/fc-cache
FFMPEG_AV_CFLAGS = 
FFMPEG_AV_LIBS = 
FFMPEG_INCLUDES = 
FFMPEG_LIBS = 
FFMPEG_SWSCALE_CFLAGS = 
FFMPEG_SWSCALE_LIBS = 
FULLSCREEN_DRIVERS = 
GENCAT = 
GFXOUTPUT_DRIVERS = 
GFXOUTPUT_LIBS = 
GMOFILES =  da.gmo de.gmo es.gmo fr.gmo hu.gmo it.gmo ko.gmo nl.gmo pl.gmo ru.gmo sv.gmo tr.gmo
GMSGFMT = 
GREP = 
GTKGL_CFLAGS = 
GTKGL_LIBS = 
GTK_CFLAGS = 
GTK_LIBS = 
HAVE_READLINE = 
HCRTF = no
HHC = no
INLINE_UNIT_GROWTH = --param inline-unit-growth=60
INSTALL = /opt/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = 
INTLDEPS = 
INTLLIBS = 
INTLOBJS = 
IPFC = no
JOY_LIBS = -framework IOKit -framework CoreServices
LDFLAGS = -L/Users/sid/Sources/vice-emu/trunk/vice/extlib/x86_64-10.7-clang/lib 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lm  -framework CoreMidi -framework CoreServices
LINKCC = $(CXX)
LN_S = ln -s
LTLIBOBJS = 
MAKEGUIDE = no
MAKEINFO = ${SHELL} /Users/sid/Sources/vice-emu/trunk/vice/missing --run makeinfo
MAKERTF = no
MAX_INLINE_INSN_SINGLE = --param max-inline-insns-single=600
MKDIR_P = /opt/local/bin/gmkdir -p
MKINSTALLDIRS = 
MSGFMT = 
NETPLAY_LIBS = 
NLS_LOCALEDIR = 
OBJC = /usr/bin/clang -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk -mmacosx-version-min=10.7
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -O3
OBJEXT = o
PACKAGE = vice
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PDFTEX = no
PERL = /opt/local/bin/perl
PKG_CONFIG = /opt/local/bin/pkg-config
POFILES =  da.po de.po es.po fr.po hu.po it.po ko.po nl.po pl.po ru.po sv.po tr.po
POSUB = 
QUICKTIME_INCLUDES = 
QUICKTIME_LIBS = 
RANLIB = ranlib
READLINE = 
READLINE_LIBS = 
RESID_DEP = libresid
RESID_DIR = resid
RESID_DTV_DEP = libresiddtv
RESID_DTV_DIR = resid-dtv
RESID_DTV_INCLUDES = -I$(top_builddir)/src/resid-dtv
RESID_DTV_LIBS = $(top_builddir)/src/resid-dtv/libresiddtv.a
RESID_FP_DEP = libresidfp
RESID_FP_DIR = resid-fp
RESID_FP_INCLUDES = -I$(top_builddir)/src/resid-fp
RESID_FP_LIBS = $(top_builddir)/src/resid-fp/libresidfp.a
RESID_INCLUDES = -I$(top_builddir)/src/resid
RESID_LIBS = $(top_builddir)/src/resid/libresid.a
SDL_EXTRA_LIBS = 
SET_MAKE = 
SHELL = /bin/sh
SOUND_AIX_OBJ = 
SOUND_DRIVERS =  soundcoreaudio.o
SOUND_HPUX_OBJ = 
SOUND_LIBS =  -framework CoreAudio -framework AudioToolbox -framework AudioUnit
SOUND_MIDAS_OBJ = 
SOUND_SDL_OBJ = 
SOUND_SGI_OBJ = 
SOUND_USS_OBJ = 
STRIP = strip
TEXI2DVI = texi2dvi
TEXI2IPF = no
TFE_LIBS = 
UI_LIBS = -framework Cocoa -framework OpenGL -framework Carbon -framework CoreVideo
UNIX_MACOSX_UITYPE = cocoa
USE_INCLUDED_LIBINTL = 
USE_NLS = no
VERSION = 2.3.16
VERSION_RC = 2,3,16,0
VICEDIR = /usr/local/lib/vice
VICE_SYNC = 
VICE_VERSION = 2.3.16
VICE_VERSION_BUILD = 16
VICE_VERSION_MAJOR = 2
VICE_VERSION_MINOR = 3
VSID_WINRES = 
VTE_CFLAGS = 
VTE_LIBS = 
WINDRES = 
WRC = 
X128_WINRES = 
X64DTV_WINRES = 
X64_WINRES = 
XCBM2_WINRES = 
XCBM5X0_WINRES = 
XGETTEXT = 
XMKMF = 
XPET_WINRES = 
XPLUS4_WINRES = 
XVIC_WINRES = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
YACC = bison -y
YFLAGS = 
ZLIB_LIBS = -lz
abs_builddir = /Users/sid/Sources/vice-emu/trunk/vice/test_build/cocoa-10.7-clang/x86_64/src
abs_srcdir = /Users/sid/Sources/vice-emu/trunk/vice/src
abs_top_builddir = /Users/sid/Sources/vice-emu/trunk/vice/test_build/cocoa-10.7-clang/x86_64
abs_top_srcdir = /Users/sid/Sources/vice-emu/trunk/vice
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_sdl_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
artsc_config = 
bindir = ${exec_prefix}/bin
build = i686-apple-darwin11.3.0
build_alias = 
build_cpu = i686
build_os = darwin11.3.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin
host_alias = x86_64-apple-darwin
host_cpu = x86_64
host_os = darwin
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/sid/Sources/vice-emu/trunk/vice/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /opt/local/bin/gmkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sdl_config = 
sharedstatedir = ${prefix}/com
srcdir = /Users/sid/Sources/vice-emu/trunk/vice/src
subdirs =  src/resid src/resid-dtv src/resid-fp
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = /Users/sid/Sources/vice-emu/trunk/vice
vsid_LDFLAGS = 
x128_LDFLAGS = 
x64_LDFLAGS = 
xcbm2_LDFLAGS = 
xpet_LDFLAGS = 
xplus4_LDFLAGS = 
xvic_LDFLAGS = 

# We have to override the automake default, because we need to use
# $(CXX) instead of $(CC) when compiling with reSID.
LINK = $(CXX) $(CFLAGS) $(LDFLAGS) -o $@
CCLD = $(CXX)
SUBDIRS = \
	resid \
	resid-fp \
	resid-dtv \
	sounddrv \
	drive \
	vdrive \
	fsdevice \
	diskimage \
	iecbus \
	serial \
	parallel \
	tape \
	imagecontents \
	fileio \
	video \
	raster \
	vicii \
	viciisc \
	vdc \
	crtc \
	gfxoutputdrv \
	printerdrv \
	rs232drv \
	sid \
	monitor \
	core \
	rtc \
	userport \
	c64 \
	c64dtv \
	c128 \
	vic20 \
	pet \
	plus4 \
	cbm2 \
	arch

DIST_SUBDIRS = \
	sounddrv \
	drive \
	vdrive \
	fsdevice \
	diskimage \
	iecbus \
	serial \
	parallel \
	tape \
	imagecontents \
	fileio \
	video \
	raster \
	vicii \
	viciisc \
	vdc \
	crtc \
	gfxoutputdrv \
	printerdrv \
	rs232drv \
	sid \
	monitor \
	core \
	rtc \
	userport \
	c64 \
	c64dtv \
	c128 \
	vic20 \
	pet \
	plus4 \
	cbm2 \
	arch \
	resid \
	resid-fp \
	resid-dtv \
	lib

INCLUDES = \
	-I$(top_srcdir)/src/arch/unix/macosx/cocoa/menu -I$(top_srcdir)/src/arch/unix/macosx/cocoa/dialog -I$(top_srcdir)/src/arch/unix/macosx/cocoa/view -I$(top_srcdir)/src/arch/unix/macosx/cocoa -I$(top_srcdir)/src/arch/unix/macosx -I$(top_srcdir)/src/arch/unix  \
	-I$(top_builddir)/src \
	-I$(top_srcdir)/src \
	-I$(top_srcdir)/src/arch \
	-I$(top_srcdir)/src/arch/unix/readline \
	-I$(top_srcdir)/src/c64 \
	-I$(top_srcdir)/src/drive \
	-I$(top_srcdir)/src/monitor \
	-I$(top_srcdir)/src/plus4 \
	-I$(top_srcdir)/src/vic20 \
	-I$(top_srcdir)/src/vdrive \
	-I$(top_srcdir)/src/imagecontents \
	-I$(top_srcdir)/src/userport

noinst_HEADERS = \
	6510core.h \
	acia.h \
	alarm.h \
	archapi.h \
	attach.h \
	autostart.h \
	autostart-prg.h \
	blockdev.h \
	c128ui.h \
	c64ui.h \
	cartio.h \
	cartridge.h \
	catweaselmkiii.h \
	cbm2ui.h \
	cbmdos.h \
	cbmimage.h \
	charset.h \
	cia.h \
	clkguard.h \
	clipboard.h \
	cmdline.h \
	color.h \
	config.h.in \
	console.h \
	crc32.h \
	datasette.h \
	debug.h \
	diskconstants.h \
	diskimage.h \
	dma.h \
	dynlib.h \
	embedded.h \
	fileio.h \
	findpath.h \
	fixpoint.h \
	fsdevice.h \
	flash040.h \
	fliplist.h \
	fullscreen.h \
	gcr.h \
	gfxoutput.h \
	h6809regs.h \
	hardsid.h \
	iecbus.h \
	iecdrive.h \
	imagecontents.h \
	info.h \
	init.h \
	initcmdline.h \
	interrupt.h \
	ioutil.h \
	joystick.h \
	kbdbuf.h \
	keyboard.h \
	lib.h \
	libm_math.h \
	lightpen.h \
	log.h \
	machine-bus.h \
	machine-drive.h \
	machine-printer.h \
	machine-video.h \
	machine.h \
	main.h \
	mainc64cpu.c \
	mainc64cpu.h \
	maincpu.h \
	mainviccpu.c \
	mem.h \
	midi.h \
	mididrv.h \
	monitor.h \
	mos6510.h \
	mos6510dtv.h \
	mouse.h \
	network.h \
	opencbm.h \
	opencbmlib.h \
	palette.h \
	parallel.h \
	parsid.h \
	petui.h \
	piacore.h \
	plus4ui.h \
	printer.h \
	ps2mouse.h \
	ram.h \
	rawfile.h \
	rawnet.h \
	rawnetarch.h \
	resources.h \
	riot.h \
	romset.h \
	rs232drv.h \
	rsuser.h \
	screenshot.h \
	serial.h \
	sidcart.h \
	signals.h \
	snapshot.h \
	sound.h \
	sysfile.h \
	tap.h \
	tape.h \
	tpi.h \
	translate_funcs.h \
	translate_languages.h \
	translate_text.c \
	traps.h \
	uiapi.h \
	uicmdline.h \
	uicolor.h \
	uimon.h \
	usleep.h \
	util.h \
	version.h.in \
	version.h \
	via.h \
	vic20ui.h \
	vice.h \
	vice_sdl.h \
	vice-event.h \
	vicemaxpath.h \
	vicesocket.h \
	vicii.h \
	video.h \
	viewport.h \
	vsidui.h \
	vsync.h \
	vsyncapi.h \
	z80regs.h \
	zfile.h \
	zipcode.h

base_sources = \
	alarm.c \
	attach.c \
	autostart.c \
	autostart-prg.c \
	charset.c \
	clkguard.c \
	clipboard.c \
	cmdline.c \
	cbmdos.c \
	cbmimage.c \
	color.c \
	crc32.c \
	datasette.c \
	debug.c \
	dma.c \
	embedded.c \
	event.c \
	findpath.c \
	fliplist.c \
	gcr.c \
	info.c \
	init.c \
	initcmdline.c \
	interrupt.c \
	ioutil.c \
	joystick.c \
	kbdbuf.c \
	keyboard.c \
	lib.c \
	libm_math.c \
	lightpen.c \
	log.c \
	machine-bus.c \
	machine.c \
	main.c \
	network.c \
	opencbmlib.c \
	palette.c \
	ram.c \
	rawfile.c \
	rawnet.c \
	resources.c \
	romset.c \
	screenshot.c \
	snapshot.c \
	socket.c \
	sound.c \
	sysfile.c \
	translate.c \
	traps.c \
	util.c \
	vsync.c \
	zfile.c \
	zipcode.c

mouse_sources = \
	mouse.c

ps2mouse_sources = \
	ps2mouse.c

midi_sources = \
	midi.c

cpucore_sources = \
	6510core.c

cpudtvcore_sources = \
	6510dtvcore.c

maincpu_sources = \
	maincpu.c

EXTRA_DIST = \
	6510core.c \
	6510dtvcore.c \
	ChangeLog \
	ChangeLog.1 \
	ChangeLog.2 \
	ChangeLog.3 \
	ChangeLog.4 \
	ChangeLog.5 \
	ChangeLog.6 \
	aciacore.c \
	bin2c.c \
	bin2c.sh \
	convert_owcc_libs.sh \
	debug.h.in \
	fixpoint.c \
	geninfocontrib_h.sh \
	gentranslate_h.sh \
	gentranslate_h.sh.in \
	gentranslatetable.sh \
	infocontrib.sed \
	od2c.sh \
	palette2c.sh \
	piacore.c \
	sedinfocontrib_h.sh \
	translate.txt

EMBEDDED_H_FILES = 
#EMBEDDED_H_FILES = \
#	c128basic64.h \
#	c128basichi.h \
#	c128basiclo.h \
#	c128chargde.h \
#	c128chargen.h \
#	c128chargfr.h \
#	c128chargse.h \
#	c128kernal.h \
#	c128kernal64.h \
#	c128kernalde.h \
#	c128kernalfi.h \
#	c128kernalfr.h \
#	c128kernalit.h \
#	c128kernalno.h \
#	c128kernalse.h \
#	c64basic.h \
#	c64kernal.h \
#	c64chargen.h \
#	cbm2basic128.h \
#	cbm2basic256.h \
#	cbm2basic500.h \
#	cbm2chargen500.h \
#	cbm2chargen600.h \
#	cbm2chargen700.h \
#	cbm2kernal.h \
#	cbm2kernal500.h \
#	drived1541II.h \
#	drived1571cr.h \
#	drivedos1001.h \
#	drivedos1541.h \
#	drivedos1551.h \
#	drivedos1570.h \
#	drivedos1571.h \
#	drivedos1581.h \
#	drivedos2000.h \
#	drivedos4000.h \
#	drivedos2031.h \
#	drivedos2040.h \
#	drivedos3040.h \
#	drivedos4040.h \
#	petbasic1.h \
#	petbasic2.h \
#	petbasic4.h \
#	petchargen.h \
#	petedit1g.h \
#	petedit2b.h \
#	petedit2g.h \
#	petedit4b40.h \
#	petedit4b80.h \
#	petedit4g40.h \
#	petkernal1.h \
#	petkernal2.h \
#	petkernal4.h \
#	plus43plus1hi.h \
#	plus43plus1lo.h \
#	plus4basic.h \
#	plus4kernal.h \
#	printermps803.h \
#	printernl10cbm.h \
#	vic20basic.h \
#	vic20chargen.h \
#	vic20kernal.h \
#	c128_vdc_comp_vpl.h \
#	c128_vdc_deft_vpl.h \
#	c64_c64hq_vpl.h \
#	c64_c64s_vpl.h \
#	c64_ccs64_vpl.h \
#	c64_default_vpl.h \
#	c64_frodo_vpl.h \
#	c64_godot_vpl.h \
#	c64_pc64_vpl.h \
#	c64_vice_vpl.h \
#	pet_amber_vpl.h \
#	pet_green_vpl.h \
#	pet_white_vpl.h \
#	plus4_default_vpl.h \
#	vic20_default_vpl.h

#EMBEDDED_DEPENDS = bin2c bin2c.sh
##EMBEDDED_DEPENDS = bin2c.sh
OWCC_LIBS = 
#OWCC_LIBS = owcc_libs_converted.h
BUILT_SOURCES = translate.h $(EMBEDDED_H_FILES) $(OWCC_LIBS) infocontrib.h
#BUILT_SOURCES = translate.h translate_table.h $(EMBEDDED_H_FILES) $(OWCC_LIBS) infocontrib.h
c128_lib = $(top_builddir)/src/c128/libc128.a
c64_lib = $(top_builddir)/src/c64/libc64.a
c64sc_lib = $(top_builddir)/src/c64/libc64sc.a
c64dtv_lib = $(top_builddir)/src/c64dtv/libc64dtv.a
c64dtvstubs_lib = $(top_builddir)/src/c64dtv/libc64dtvstubs.a
c64c128_lib = $(top_builddir)/src/c64/libc64c128.a
c64c64dtv_lib = $(top_builddir)/src/c64/libc64c64dtv.a
c64cart_lib = $(top_builddir)/src/c64/cart/libc64cart.a
c64cartsystem_lib = $(top_builddir)/src/c64/cart/libc64cartsystem.a
c64commoncart_lib = $(top_builddir)/src/c64/cart/libc64commoncart.a
core_lib = $(top_builddir)/src/core/libcore.a
crtc_lib = $(top_builddir)/src/crtc/libcrtc.a
diskimage_lib = $(top_builddir)/src/diskimage/libdiskimage.a
drive_lib = $(top_builddir)/src/drive/libdrive.a
driveiec_lib = $(top_builddir)/src/drive/iec/libdriveiec.a
driveiec128dcr_lib = $(top_builddir)/src/drive/iec128dcr/libdriveiec128dcr.a
driveiecieee_lib = $(top_builddir)/src/drive/iecieee/libdriveiecieee.a
driveiecc64exp_lib = $(top_builddir)/src/drive/iec/c64exp/libdriveiecc64exp.a
driveiecplus4exp_lib = $(top_builddir)/src/drive/iec/plus4exp/libdriveiecplus4exp.a
driveieee_lib = $(top_builddir)/src/drive/ieee/libdriveieee.a
drivetcbm_lib = $(top_builddir)/src/drive/tcbm/libdrivetcbm.a
fsdevice_lib = $(top_builddir)/src/fsdevice/libfsdevice.a
fileio_lib = $(top_builddir)/src/fileio/libfileio.a
gfxoutputdrv_lib = $(top_builddir)/src/gfxoutputdrv/libgfxoutputdrv.a
iecbus_lib = $(top_builddir)/src/iecbus/libiecbus.a
imagecontents_lib = $(top_builddir)/src/imagecontents/libimagecontents.a
mascuerade_lib = $(top_builddir)/src/vic20/cart/libmascuerade.a
monitor_lib = $(top_builddir)/src/monitor/libmonitor.a
parallel_lib = $(top_builddir)/src/parallel/libparallel.a
pet_lib = $(top_builddir)/src/pet/libpet.a
plus4_lib = $(top_builddir)/src/plus4/libplus4.a
printerdrv_lib = $(top_builddir)/src/printerdrv/libprinterdrv.a
rs232drv_lib = $(top_builddir)/src/rs232drv/librs232drv.a
raster_lib = $(top_builddir)/src/raster/libraster.a
rtc_lib = $(top_builddir)/src/rtc/librtc.a
serial_lib = $(top_builddir)/src/serial/libserial.a
sid_lib = $(top_builddir)/src/sid/libsid.a
sounddrv_lib = $(top_builddir)/src/sounddrv/libsounddrv.a
tape_lib = $(top_builddir)/src/tape/libtape.a
userport_lib = $(top_builddir)/src/userport/libuserport.a
vdc_lib = $(top_builddir)/src/vdc/libvdc.a
vdrive_lib = $(top_builddir)/src/vdrive/libvdrive.a
vic20_lib = $(top_builddir)/src/vic20/libvic20.a
vic20cart_lib = $(top_builddir)/src/vic20/cart/libvic20cart.a
vicii_lib = $(top_builddir)/src/vicii/libvicii.a
viciidtv_lib = $(top_builddir)/src/vicii/libviciidtv.a
viciisc_lib = $(top_builddir)/src/viciisc/libviciisc.a
video_lib = $(top_builddir)/src/video/libvideo.a
vsid_lib = $(top_builddir)/src/c64/libvsid.a
xcbm2_lib = $(top_builddir)/src/cbm2/libcbm2.a
xcbm5x0_lib = $(top_builddir)/src/cbm2/libcbm5x0.a
common_libs = $(top_builddir)/src/arch/unix/macosx/cocoa/menu/libarchmacosxcocoamenu.a $(top_builddir)/src/arch/unix/macosx/cocoa/dialog/libarchmacosxcocoadialog.a $(top_builddir)/src/arch/unix/macosx/cocoa/libarchmacosxcocoa.a $(top_builddir)/src/arch/unix/macosx/cocoa/view/libarchmacosxcocoaview.a $(top_builddir)/src/arch/unix/macosx/libarchmacosx.a $(top_builddir)/src/arch/unix/libarch.a   
resid_libs = $(top_builddir)/src/resid/libresid.a $(top_builddir)/src/resid-fp/libresidfp.a
resid_dtv_libs = $(top_builddir)/src/resid-dtv/libresiddtv.a $(top_builddir)/src/resid-fp/libresidfp.a

# external libraries required for all emulators
emu_extlibs =  -framework Cocoa -framework OpenGL -framework Carbon -framework CoreVideo    -framework CoreAudio -framework AudioToolbox -framework AudioUnit   -framework IOKit -framework CoreServices  -lz  -ledit
driver_libs = $(sounddrv_lib) $(gfxoutputdrv_lib) $(printerdrv_lib) $(rs232drv_lib) $(diskimage_lib) $(fsdevice_lib) $(tape_lib) $(fileio_lib) $(serial_lib) $(core_lib)
#blockdev_lib = 
blockdev_lib = $(top_builddir)/src/arch/unix/blockdev.o
#realdevice_lib = 
realdevice_lib = opencbmlib.o $(top_builddir)/src/arch/unix/dynlib.o
#x64dtv_owbin = 
x64dtv_owbin = x64dtvow
#x64dtv_bin = 
x64dtv_bin = x64dtv
#x64sc_owbin = 
x64sc_owbin = x64scow
#x64sc_bin = 
x64sc_bin = x64sc
#c1541 = 
c1541 = c1541
#petcat = 
petcat = petcat
#cartconv = 
cartconv = cartconv

# workaround for extra exe creation
vsidow_SOURCES = maincpu.c
x128ow_SOURCES = maincpu.c
x64ow_SOURCES = maincpu.c
x64dtvow_SOURCES = maincpu.c
x64scow_SOURCES = maincpu.c
xcbm2ow_SOURCES = maincpu.c
xcbm5x0ow_SOURCES = maincpu.c
xpetow_SOURCES = maincpu.c
xplus4ow_SOURCES = maincpu.c
xvicow_SOURCES = maincpu.c
OW_progs = 
#OW_progs = vsidow x64ow $(x64sc_owbin) x128ow $(x64dtv_owbin) xvicow xpetow xplus4ow xcbm2ow xcbm5x0ow
bla = 

# vsid
vsid_libs = \
	 \
	$(vsid_lib) \
	$(sid_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(vicii_lib) \
	$(raster_lib) \
	$(video_lib) \
	$(common_libs) \
	$(resid_libs)

vsid_SOURCES = $(base_sources) $(maincpu_sources) $(mouse_sources) $(midi_sources)
vsid_LDADD = $(vsid_libs) $(emu_extlibs)  
vsid_DEPENDENCIES = $(vsid_libs)

# x64
x64_libs = \
	 \
	$(c64_lib) \
	$(c64cartsystem_lib) \
	$(c64cart_lib) \
	$(c64commoncart_lib) \
	$(driveiec_lib) \
	$(driveiecieee_lib) \
	$(driveiecc64exp_lib) \
	$(driveieee_lib) \
	$(drive_lib) \
	$(iecbus_lib) \
	$(parallel_lib) \
	$(vdrive_lib) \
	$(sid_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(vicii_lib) \
	$(raster_lib) \
	$(rtc_lib) \
	$(userport_lib) \
	$(video_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_libs)

x64_SOURCES = $(base_sources) $(maincpu_sources) $(mouse_sources) $(midi_sources)
x64_LDADD = $(x64_libs) $(emu_extlibs)  
x64_DEPENDENCIES = $(x64_libs)

# x64sc
x64sc_libs = \
	 \
	$(c64sc_lib) \
	$(c64cartsystem_lib) \
	$(c64cart_lib) \
	$(c64commoncart_lib) \
	$(driveiec_lib) \
	$(driveiecieee_lib) \
	$(driveiecc64exp_lib) \
	$(driveieee_lib) \
	$(drive_lib) \
	$(iecbus_lib) \
	$(parallel_lib) \
	$(vdrive_lib) \
	$(sid_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(viciisc_lib) \
	$(raster_lib) \
	$(rtc_lib) \
	$(userport_lib) \
	$(video_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_libs)

x64sc_SOURCES = $(base_sources) $(mouse_sources) $(midi_sources)
x64sc_LDADD = $(x64sc_libs) $(emu_extlibs)  
x64sc_DEPENDENCIES = $(x64sc_libs)
x64sc_LDFLAGS = 

# x64dtv
x64dtv_libs = \
	 \
	$(c64dtv_lib) \
	$(c64c64dtv_lib) \
	$(driveiec_lib) \
	$(driveiecieee_lib) \
	$(driveiecc64exp_lib) \
	$(driveieee_lib) \
	$(drive_lib) \
	$(iecbus_lib) \
	$(parallel_lib) \
	$(userport_lib) \
	$(vdrive_lib) \
	$(sid_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(viciidtv_lib) \
	$(raster_lib) \
	$(rtc_lib) \
	$(video_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_dtv_libs) \
	$(c64dtvstubs_lib)

x64dtv_SOURCES = $(base_sources) $(ps2mouse_sources)
x64dtv_LDADD = $(x64dtv_libs) $(emu_extlibs)  
x64dtv_DEPENDENCIES = $(x64dtv_libs)
x64dtv_LDFLAGS = 

# x128
x128_libs = \
	 \
	$(c128_lib) \
	$(c64cartsystem_lib) \
	$(c64cart_lib) \
	$(c64commoncart_lib) \
	$(c64c128_lib) \
	$(driveiec_lib) \
	$(driveiec128dcr_lib) \
	$(driveiecieee_lib) \
	$(driveiecc64exp_lib) \
	$(driveieee_lib) \
	$(drive_lib) \
	$(iecbus_lib) \
	$(parallel_lib) \
	$(vdrive_lib) \
	$(sid_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(vicii_lib) \
	$(vdc_lib) \
	$(raster_lib) \
	$(rtc_lib) \
	$(userport_lib) \
	$(video_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_libs)

x128_SOURCES = $(base_sources) $(mouse_sources) $(midi_sources)
x128_LDADD = $(x128_libs) $(emu_extlibs)  
x128_DEPENDENCIES = $(x128_libs)

# xvic
xvic_libs = \
	 \
	$(vic20_lib) \
	$(vic20cart_lib) \
	$(c64commoncart_lib) \
	$(mascuerade_lib) \
	$(driveiec_lib) \
	$(driveiecieee_lib) \
	$(driveieee_lib) \
	$(drive_lib) \
	$(iecbus_lib) \
	$(parallel_lib) \
	$(vdrive_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(raster_lib) \
	$(rtc_lib) \
	$(userport_lib) \
	$(sid_lib) \
	$(video_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_libs)

xvic_SOURCES = $(base_sources) $(mouse_sources) $(midi_sources)
xvic_LDADD = $(xvic_libs) $(emu_extlibs)  
xvic_DEPENDENCIES = $(xvic_libs)

# xpet
xpet_libs = \
	 \
	$(pet_lib) \
	$(driveiecieee_lib) \
	$(driveieee_lib) \
	$(drive_lib) \
	$(parallel_lib) \
	$(vdrive_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(crtc_lib) \
	$(raster_lib) \
	$(rtc_lib) \
	$(userport_lib) \
	$(video_lib) \
	$(sid_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_libs)

xpet_SOURCES = $(base_sources) $(mouse_sources)
xpet_LDADD = $(xpet_libs) $(emu_extlibs)  
xpet_DEPENDENCIES = $(xpet_libs) 

# xplus4
xplus4_libs = \
	 \
	$(plus4_lib) \
	$(driveiec_lib) \
	$(driveiecieee_lib) \
	$(driveiecplus4exp_lib) \
	$(drivetcbm_lib) \
	$(drive_lib) \
	$(iecbus_lib) \
	$(vdrive_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(sid_lib) \
	$(raster_lib) \
	$(rtc_lib) \
	$(userport_lib) \
	$(video_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_libs)

xplus4_SOURCES = $(base_sources) $(mouse_sources)
xplus4_LDADD = $(xplus4_libs) $(emu_extlibs)  
xplus4_DEPENDENCIES = $(xplus4_libs)

# xcbm2
xcbm2_libs = \
	 \
	$(xcbm2_lib) \
	$(driveiecieee_lib) \
	$(driveieee_lib) \
	$(drive_lib) \
	$(parallel_lib) \
	$(vdrive_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(sid_lib) \
	$(crtc_lib) \
	$(raster_lib) \
	$(rtc_lib) \
	$(video_lib) \
	$(userport_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_libs)

xcbm2_SOURCES = $(base_sources) $(mouse_sources)
xcbm2_LDADD = $(xcbm2_libs) $(emu_extlibs)  
xcbm2_DEPENDENCIES = $(xcbm2_libs) 

# xcbm5x0
xcbm5x0_libs = \
	 \
	$(xcbm5x0_lib) \
	$(driveiecieee_lib) \
	$(driveieee_lib) \
	$(drive_lib) \
	$(parallel_lib) \
	$(vdrive_lib) \
	$(monitor_lib) \
	$(driver_libs) \
	$(sid_lib) \
	$(vicii_lib) \
	$(raster_lib) \
	$(rtc_lib) \
	$(video_lib) \
	$(userport_lib) \
	$(common_libs) \
	$(imagecontents_lib) \
	$(resid_libs)

xcbm5x0_SOURCES = $(base_sources) $(mouse_sources)
xcbm5x0_LDADD = $(xcbm5x0_libs) $(emu_extlibs)  
xcbm5x0_DEPENDENCIES = $(xcbm5x0_libs) 
xcbm5x0_LDFLAGS = 

# c1541
c1541_SOURCES = \
	c1541.c \
	cbmdos.c \
	charset.c \
	findpath.c \
	gcr.c \
	cbmimage.c \
	info.c \
	ioutil.c \
	lib.c \
	log.c \
	rawfile.c \
	resources.c \
	util.c \
	zfile.c \
	zipcode.c

ARCH_EXTRA_OBJECTS = $(top_builddir)/src/arch/unix/archdep.o
#ARCH_EXTRA_OBJECTS = $(top_builddir)/src/arch/unix/libarch.a

# FIXME: I don't like linking `archdep.o' this way, but we cannot use
# the generic `ARCH_LIBS', because we would have to link against X11
# libs too then.
c1541_LDADD = \
	$(ARCH_EXTRA_OBJECTS) \
	$(blockdev_lib) \
	$(realdevice_lib) \
	$(vdrive_lib) \
	$(imagecontents_lib) \
	$(fileio_lib) \
	$(diskimage_lib) \
	$(tape_lib) \
	$(serial_lib) \
	  \
	  \
	-lz 


# petcat
petcat_SOURCES = \
	charset.c \
	findpath.c \
	ioutil.c \
	lib.c \
	log.c \
	petcat.c \
	rawfile.c \
	resources.c \
	util.c \
	zfile.c \
	zipcode.c

petcat_LDADD = \
	$(ARCH_EXTRA_OBJECTS) \
	$(fileio_lib) \
	  \
	-lz


# cartconv
cartconv_SOURCES = cartconv.c
cartconv_LDADD = 

# distclean
DISTCLEANFILES = $(BUILT_SOURCES)
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
debug.h: $(top_builddir)/config.status $(srcdir)/debug.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
gentranslate_h.sh: $(top_builddir)/config.status $(srcdir)/gentranslate_h.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
version.h: $(top_builddir)/config.status $(srcdir)/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
c1541$(EXEEXT): $(c1541_OBJECTS) $(c1541_DEPENDENCIES) 
	@rm -f c1541$(EXEEXT)
	$(LINK) $(c1541_OBJECTS) $(c1541_LDADD) $(LIBS)
cartconv$(EXEEXT): $(cartconv_OBJECTS) $(cartconv_DEPENDENCIES) 
	@rm -f cartconv$(EXEEXT)
	$(LINK) $(cartconv_OBJECTS) $(cartconv_LDADD) $(LIBS)
petcat$(EXEEXT): $(petcat_OBJECTS) $(petcat_DEPENDENCIES) 
	@rm -f petcat$(EXEEXT)
	$(LINK) $(petcat_OBJECTS) $(petcat_LDADD) $(LIBS)
vsid$(EXEEXT): $(vsid_OBJECTS) $(vsid_DEPENDENCIES) 
	@rm -f vsid$(EXEEXT)
	$(vsid_LINK) $(vsid_OBJECTS) $(vsid_LDADD) $(LIBS)
x128$(EXEEXT): $(x128_OBJECTS) $(x128_DEPENDENCIES) 
	@rm -f x128$(EXEEXT)
	$(x128_LINK) $(x128_OBJECTS) $(x128_LDADD) $(LIBS)
x64$(EXEEXT): $(x64_OBJECTS) $(x64_DEPENDENCIES) 
	@rm -f x64$(EXEEXT)
	$(x64_LINK) $(x64_OBJECTS) $(x64_LDADD) $(LIBS)
x64dtv$(EXEEXT): $(x64dtv_OBJECTS) $(x64dtv_DEPENDENCIES) 
	@rm -f x64dtv$(EXEEXT)
	$(x64dtv_LINK) $(x64dtv_OBJECTS) $(x64dtv_LDADD) $(LIBS)
x64sc$(EXEEXT): $(x64sc_OBJECTS) $(x64sc_DEPENDENCIES) 
	@rm -f x64sc$(EXEEXT)
	$(x64sc_LINK) $(x64sc_OBJECTS) $(x64sc_LDADD) $(LIBS)
xcbm2$(EXEEXT): $(xcbm2_OBJECTS) $(xcbm2_DEPENDENCIES) 
	@rm -f xcbm2$(EXEEXT)
	$(xcbm2_LINK) $(xcbm2_OBJECTS) $(xcbm2_LDADD) $(LIBS)
xcbm5x0$(EXEEXT): $(xcbm5x0_OBJECTS) $(xcbm5x0_DEPENDENCIES) 
	@rm -f xcbm5x0$(EXEEXT)
	$(xcbm5x0_LINK) $(xcbm5x0_OBJECTS) $(xcbm5x0_LDADD) $(LIBS)
xpet$(EXEEXT): $(xpet_OBJECTS) $(xpet_DEPENDENCIES) 
	@rm -f xpet$(EXEEXT)
	$(xpet_LINK) $(xpet_OBJECTS) $(xpet_LDADD) $(LIBS)
xplus4$(EXEEXT): $(xplus4_OBJECTS) $(xplus4_DEPENDENCIES) 
	@rm -f xplus4$(EXEEXT)
	$(xplus4_LINK) $(xplus4_OBJECTS) $(xplus4_LDADD) $(LIBS)
xvic$(EXEEXT): $(xvic_OBJECTS) $(xvic_DEPENDENCIES) 
	@rm -f xvic$(EXEEXT)
	$(xvic_LINK) $(xvic_OBJECTS) $(xvic_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include $(DEPDIR)/memcmp.Po
include $(DEPDIR)/usleep.Po
include ./$(DEPDIR)/alarm.Po
include ./$(DEPDIR)/attach.Po
include ./$(DEPDIR)/autostart-prg.Po
include ./$(DEPDIR)/autostart.Po
include ./$(DEPDIR)/c1541.Po
include ./$(DEPDIR)/cartconv.Po
include ./$(DEPDIR)/cbmdos.Po
include ./$(DEPDIR)/cbmimage.Po
include ./$(DEPDIR)/charset.Po
include ./$(DEPDIR)/clipboard.Po
include ./$(DEPDIR)/clkguard.Po
include ./$(DEPDIR)/cmdline.Po
include ./$(DEPDIR)/color.Po
include ./$(DEPDIR)/crc32.Po
include ./$(DEPDIR)/datasette.Po
include ./$(DEPDIR)/debug.Po
include ./$(DEPDIR)/dma.Po
include ./$(DEPDIR)/embedded.Po
include ./$(DEPDIR)/event.Po
include ./$(DEPDIR)/findpath.Po
include ./$(DEPDIR)/fliplist.Po
include ./$(DEPDIR)/gcr.Po
include ./$(DEPDIR)/info.Po
include ./$(DEPDIR)/init.Po
include ./$(DEPDIR)/initcmdline.Po
include ./$(DEPDIR)/interrupt.Po
include ./$(DEPDIR)/ioutil.Po
include ./$(DEPDIR)/joystick.Po
include ./$(DEPDIR)/kbdbuf.Po
include ./$(DEPDIR)/keyboard.Po
include ./$(DEPDIR)/lib.Po
include ./$(DEPDIR)/libm_math.Po
include ./$(DEPDIR)/lightpen.Po
include ./$(DEPDIR)/log.Po
include ./$(DEPDIR)/machine-bus.Po
include ./$(DEPDIR)/machine.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/maincpu.Po
include ./$(DEPDIR)/midi.Po
include ./$(DEPDIR)/mouse.Po
include ./$(DEPDIR)/network.Po
include ./$(DEPDIR)/opencbmlib.Po
include ./$(DEPDIR)/palette.Po
include ./$(DEPDIR)/petcat.Po
include ./$(DEPDIR)/ps2mouse.Po
include ./$(DEPDIR)/ram.Po
include ./$(DEPDIR)/rawfile.Po
include ./$(DEPDIR)/rawnet.Po
include ./$(DEPDIR)/resources.Po
include ./$(DEPDIR)/romset.Po
include ./$(DEPDIR)/screenshot.Po
include ./$(DEPDIR)/snapshot.Po
include ./$(DEPDIR)/socket.Po
include ./$(DEPDIR)/sound.Po
include ./$(DEPDIR)/sysfile.Po
include ./$(DEPDIR)/translate.Po
include ./$(DEPDIR)/traps.Po
include ./$(DEPDIR)/util.Po
include ./$(DEPDIR)/vsync.Po
include ./$(DEPDIR)/zfile.Po
include ./$(DEPDIR)/zipcode.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -rf $(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf $(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check \
	ctags-recursive install install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS


#translate_table.h:	$(srcdir)/translate.txt $(srcdir)/gentranslatetable.sh
#	echo "generating translate_table.h..."
#	$(SHELL) $(srcdir)/gentranslatetable.sh <$(srcdir)/translate.txt >translate_table.h

infocontrib.h:	$(top_srcdir)/doc/vice.texi
	echo "generating infocontrib.h..."
	$(SHELL) $(srcdir)/geninfocontrib_h.sh <$(top_srcdir)/doc/vice.texi | $(srcdir)/sedinfocontrib_h.sh $(srcdir)/infocontrib.sed >infocontrib.h

translate.h:	$(srcdir)/translate.txt $(srcdir)/gentranslate_h.sh
	echo "generating translate.h..."
#	cc $(srcdir)/arch/win32/utils/gentranslate.c -o gentranslate
#	./gentranslate translate.txt translate.h translate_table.h
	$(SHELL) $(srcdir)/gentranslate_h.sh <$(srcdir)/translate.txt >translate.h

#owcc_libs_converted.h:
#	$(SHELL) $(srcdir)/convert_owcc_libs.sh $(LIBS)

bin2c: bin2c.c
	$(CC) $(INCLUDES) $(CFLAGS) $(srcdir)/bin2c.c -o bin2c

c128basic64.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/basic64 c128basic64.h "static BYTE c128basic64_embedded[C128_BASIC64_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128basichi.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/basichi c128basichi.h "static BYTE c128basichi_embedded[C128_BASIC_ROM_IMAGEHI_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128basiclo.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/basiclo c128basiclo.h "static BYTE c128basiclo_embedded[C128_BASIC_ROM_IMAGELO_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128chargde.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/chargde c128chargde.h "static BYTE chargen_de[C128_CHARGEN_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128chargen.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/chargen c128chargen.h "static BYTE chargen_int[C128_CHARGEN_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128chargfr.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/chargfr c128chargfr.h "static BYTE chargen_fr[C128_CHARGEN_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128chargse.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/chargse c128chargse.h "static BYTE chargen_se[C128_CHARGEN_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128kernal.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/kernal c128kernal.h "static BYTE kernal_int[C128_KERNAL_ROM_IMAGE_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128kernal64.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/kernal64 c128kernal64.h "static BYTE c128kernal64_embedded[C128_KERNAL64_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128kernalde.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/kernalde c128kernalde.h "static BYTE kernal_de[C128_KERNAL_ROM_IMAGE_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128kernalfi.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/kernalfi c128kernalfi.h "static BYTE kernal_fi[C128_KERNAL_ROM_IMAGE_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128kernalfr.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/kernalfr c128kernalfr.h "static BYTE kernal_fr[C128_KERNAL_ROM_IMAGE_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128kernalit.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/kernalit c128kernalit.h "static BYTE kernal_it[C128_KERNAL_ROM_IMAGE_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128kernalno.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/kernalno c128kernalno.h "static BYTE kernal_no[C128_KERNAL_ROM_IMAGE_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128kernalse.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C128/kernalse c128kernalse.h "static BYTE kernal_se[C128_KERNAL_ROM_IMAGE_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c64basic.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C64/basic c64basic.h "BYTE c64memrom_basic64_rom[C64_BASIC_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c64kernal.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C64/kernal c64kernal.h "BYTE c64memrom_kernal64_rom[C64_KERNAL_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c64chargen.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/C64/chargen c64chargen.h "BYTE mem_chargen_rom[C64_CHARGEN_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

cbm2basic128.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/CBM-II/basic.128 cbm2basic128.h "static BYTE cbm2basic128_embedded[0x4000]" $(CROSS) $(SHELL) $(top_srcdir)

cbm2basic256.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/CBM-II/basic.256 cbm2basic256.h "static BYTE cbm2basic256_embedded[0x4000]" $(CROSS) $(SHELL) $(top_srcdir)

cbm2basic500.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/CBM-II/basic.500 cbm2basic500.h "static BYTE cbm2basic500_embedded[0x4000]" $(CROSS) $(SHELL) $(top_srcdir)

cbm2chargen500.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/CBM-II/chargen.500 cbm2chargen500.h "static BYTE cbm2chargen500_embedded[0x1000]" $(CROSS) $(SHELL) $(top_srcdir)

cbm2chargen600.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/CBM-II/chargen.600 cbm2chargen600.h "static BYTE cbm2chargen600_embedded[0x1000]" $(CROSS) $(SHELL) $(top_srcdir)

cbm2chargen700.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/CBM-II/chargen.700 cbm2chargen700.h "static BYTE cbm2chargen700_embedded[0x1000]" $(CROSS) $(SHELL) $(top_srcdir)

cbm2kernal.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/CBM-II/kernal cbm2kernal.h "static BYTE cbm2kernal_embedded[0x2000]" $(CROSS) $(SHELL) $(top_srcdir)

cbm2kernal500.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/CBM-II/kernal.500 cbm2kernal500.h "static BYTE cbm2kernal500_embedded[0x2000]" $(CROSS) $(SHELL) $(top_srcdir)

drived1541II.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/d1541II drived1541II.h "static BYTE drive_rom1541ii_embedded[DRIVE_ROM1541II_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drived1571cr.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/d1571cr drived1571cr.h "static BYTE drive_rom1571cr[DRIVE_ROM1571_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos1001.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos1001 drivedos1001.h "static BYTE drive_rom1001[DRIVE_ROM1001_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos1541.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos1541 drivedos1541.h "static BYTE drive_rom1541_embedded[DRIVE_ROM1541_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos1551.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos1551 drivedos1551.h "static BYTE drive_rom1551[DRIVE_ROM1551_SIZE]" $(CROSS) $(SHELL)  $(top_srcdir)

drivedos1570.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos1570 drivedos1570.h "static BYTE drive_rom1570[DRIVE_ROM1571_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos1571.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos1571 drivedos1571.h "static BYTE drive_rom1571[DRIVE_ROM1571_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos1581.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos1581 drivedos1581.h "static BYTE drive_rom1581[DRIVE_ROM1581_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos2000.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos2000 drivedos2000.h "static BYTE drive_rom2000[DRIVE_ROM2000_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos4000.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos4000 drivedos4000.h "static BYTE drive_rom4000[DRIVE_ROM4000_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos2031.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos2031 drivedos2031.h "static BYTE drive_rom2031[DRIVE_ROM2031_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos2040.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos2040 drivedos2040.h "static BYTE drive_rom2040[DRIVE_ROM2040_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos3040.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos3040 drivedos3040.h "static BYTE drive_rom3040[DRIVE_ROM3040_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

drivedos4040.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/DRIVES/dos4040 drivedos4040.h "static BYTE drive_rom4040[DRIVE_ROM4040_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

petbasic1.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/basic1 petbasic1.h "BYTE petbasic1_embedded[0x2000]" $(CROSS) $(SHELL) $(top_srcdir)

petbasic2.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/basic2 petbasic2.h "BYTE petbasic2_embedded[0x2000]" $(CROSS) $(SHELL) $(top_srcdir)

petbasic4.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/basic4 petbasic4.h "BYTE petbasic4_embedded[0x3000]" $(CROSS) $(SHELL) $(top_srcdir)

petchargen.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/chargen petchargen.h "BYTE petchargen_embedded[0x800]" $(CROSS) $(SHELL) $(top_srcdir)

petedit1g.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/edit1g petedit1g.h "BYTE petedit1g_embedded[0x800]" $(CROSS) $(SHELL) $(top_srcdir)

petedit2b.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/edit2b petedit2b.h "BYTE petedit2b_embedded[0x800]" $(CROSS) $(SHELL) $(top_srcdir)

petedit2g.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/edit2g petedit2g.h "BYTE petedit2g_embedded[0x800]" $(CROSS) $(SHELL) $(top_srcdir)

petedit4b40.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/edit4b40 petedit4b40.h "BYTE petedit4b40_embedded[0x800]" $(CROSS) $(SHELL) $(top_srcdir)

petedit4b80.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/edit4b80 petedit4b80.h "BYTE petedit4b80_embedded[0x800]" $(CROSS) $(SHELL) $(top_srcdir)

petedit4g40.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/edit4g40 petedit4g40.h "BYTE petedit4g40_embedded[0x800]" $(CROSS) $(SHELL) $(top_srcdir)

petkernal1.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/kernal1 petkernal1.h "BYTE petkernal1_embedded[0x1000]" $(CROSS) $(SHELL) $(top_srcdir)

petkernal2.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/kernal2 petkernal2.h "BYTE petkernal2_embedded[0x1000]" $(CROSS) $(SHELL) $(top_srcdir)

petkernal4.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PET/kernal4 petkernal4.h "BYTE petkernal4_embedded[0x1000]" $(CROSS) $(SHELL) $(top_srcdir)

plus43plus1hi.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PLUS4/3plus1hi plus43plus1hi.h "BYTE extromhi1[PLUS4_KERNAL_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

plus43plus1lo.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PLUS4/3plus1lo plus43plus1lo.h "BYTE extromlo1[PLUS4_BASIC_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

plus4basic.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PLUS4/basic plus4basic.h "BYTE plus4memrom_basic_rom[PLUS4_BASIC_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

plus4kernal.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PLUS4/kernal plus4kernal.h "BYTE plus4memrom_kernal_rom[PLUS4_KERNAL_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

printermps803.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PRINTER/mps803 printermps803.h "static BYTE charset[512][7]" $(CROSS) $(SHELL) $(top_srcdir)

printernl10cbm.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/PRINTER/nl10-cbm printernl10cbm.h "static BYTE  drv_nl10_rom[NL10_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

vic20basic.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/VIC20/basic vic20basic.h "BYTE vic20memrom_basic_rom[VIC20_BASIC_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

vic20chargen.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/VIC20/chargen vic20chargen.h "BYTE vic20chargen_embedded[VIC20_CHARGEN_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

vic20kernal.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/bin2c.sh $(top_srcdir)/data/VIC20/kernal vic20kernal.h "BYTE vic20memrom_kernal_rom[VIC20_KERNAL_ROM_SIZE]" $(CROSS) $(SHELL) $(top_srcdir)

c128_vdc_comp_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C128/vdc_comp.vpl c128_vdc_comp_vpl.h "unsigned char c128_vdc_comp_vpl[]"

c128_vdc_deft_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C128/vdc_deft.vpl c128_vdc_deft_vpl.h "unsigned char c128_vdc_deft_vpl[]"

c64_c64hq_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C64/c64hq.vpl c64_c64hq_vpl.h "unsigned char c64_c64hq_vpl[]"

c64_c64s_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C64/c64s.vpl c64_c64s_vpl.h "unsigned char c64_c64s_vpl[]"

c64_ccs64_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C64/ccs64.vpl c64_ccs64_vpl.h "unsigned char c64_ccs64_vpl[]"

c64_default_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C64/default.vpl c64_default_vpl.h "unsigned char c64_default_vpl[]"

c64_frodo_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C64/frodo.vpl c64_frodo_vpl.h "unsigned char c64_frodo_vpl[]"

c64_godot_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C64/godot.vpl c64_godot_vpl.h "unsigned char c64_godot_vpl[]"

c64_pc64_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C64/pc64.vpl c64_pc64_vpl.h "unsigned char c64_pc64_vpl[]"

c64_vice_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/C64/vice.vpl c64_vice_vpl.h "unsigned char c64_vice_vpl[]"

pet_amber_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/PET/amber.vpl pet_amber_vpl.h "unsigned char pet_amber_vpl[]"

pet_green_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/PET/green.vpl pet_green_vpl.h "unsigned char pet_green_vpl[]"

pet_white_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/PET/white.vpl pet_white_vpl.h "unsigned char pet_white_vpl[]"

plus4_default_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/PLUS4/default.vpl plus4_default_vpl.h "unsigned char plus4_default_vpl[]"

vic20_default_vpl.h: $(EMBEDDED_DEPENDS)
	$(SHELL) $(srcdir)/palette2c.sh <$(top_srcdir)/data/VIC20/default.vpl vic20_default_vpl.h "unsigned char vic20_default_vpl[]"

.PHONY: vsid-all
vsid-all: \
	$(BUILT_SOURCES) \
	libresid \
	libresidfp \
	libvsid \
	libraster \
	libsid \
	libsounddrv \
	libvicii \
	libvideo \
	libarch \
	libmonitor \
	libserial \
	libcore \
	vsid$(EXEEXT)

.PHONY: x64-all
x64-all: \
	$(BUILT_SOURCES) \
	libresid \
	libresidfp \
	libc64 \
	libc64cartsystem \
	libc64cart \
	libc64commoncart \
	libdriveiec \
	libdriveiecieee \
	libdriveiecc64exp \
	libdriveieee \
	libdrive \
	libparallel \
	libvdrive \
	libraster \
	libsid \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libvicii \
	libvideo \
	libarch \
	libmonitor \
	libdiskimage \
	libiecbus \
	libserial \
	libfsdevice \
	libtape \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	libuserport \
	x64$(EXEEXT)

.PHONY: x64sc-all
x64sc-all: \
	$(BUILT_SOURCES) \
	libresid \
	libresidfp \
	libc64sc \
	libc64cartsystem \
	libc64cart \
	libc64commoncart \
	libdriveiec \
	libdriveiecieee \
	libdriveiecc64exp \
	libdriveieee \
	libdrive \
	libparallel \
	libvdrive \
	libraster \
	libsid \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libviciisc \
	libvideo \
	libarch \
	libmonitor \
	libdiskimage \
	libiecbus \
	libserial \
	libfsdevice \
	libtape \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	libuserport \
	x64sc$(EXEEXT)

.PHONY: x64dtv-all
x64dtv-all: \
	$(BUILT_SOURCES) \
	libresiddtv \
	libresidfp \
	libc64dtv \
	libc64dtvstubs \
	libc64c64dtv \
	libdriveiec \
	libdriveiecieee \
	libdriveiecc64exp \
	libdriveieee \
	libdrive \
	libparallel \
	libvdrive \
	libraster \
	libsid \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libviciidtv \
	libvideo \
	libarch \
	libmonitor \
	libdiskimage \
	libiecbus \
	libserial \
	libfsdevice \
	libtape \
	libuserport \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	x64dtv$(EXEEXT)

.PHONY: x128-all
x128-all: \
	$(BUILT_SOURCES) \
	libc128 \
	libc64c128 \
	libc64cartsystem \
	libc64cart \
	libc64commoncart \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libdriveiec \
	libdriveiec128dcr \
	libdriveiecieee \
	libdriveiecc64exp \
	libdriveieee \
	libdrive \
	libparallel \
	libvdrive \
	libarch \
	libsid \
	libvicii \
	libvdc \
	libraster \
	libvideo \
	libmonitor \
	libdiskimage \
	libiecbus \
	libserial \
	libfsdevice \
	libtape \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	libuserport \
	libresid \
	libresidfp \
	x128$(EXEEXT)

.PHONY: xvic-all
xvic-all: \
	$(BUILT_SOURCES) \
	libdriveiec \
	libdriveiecieee \
	libdriveieee \
	libdrive \
	libparallel \
	libvdrive \
	libraster \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libvic20 \
	libvic20cart \
	libc64commoncart \
	libmascuerade \
	libvideo \
	libarch \
	libmonitor \
	libdiskimage \
	libiecbus \
	libserial \
	libsid \
	libfsdevice \
	libtape \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	libuserport \
	libresid \
	libresidfp \
	xvic$(EXEEXT)

.PHONY: xpet-all
xpet-all: \
	$(BUILT_SOURCES) \
	libdriveiecieee \
	libdriveieee \
	libdrive \
	libparallel \
	libvdrive \
	libraster \
	libcrtc \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libpet \
	libvideo \
	libsid \
	libarch \
	libmonitor \
	libdiskimage \
	libserial \
	libfsdevice \
	libtape \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	libuserport \
	libresid \
	libresidfp \
	xpet$(EXEEXT)

.PHONY: xplus4-all
xplus4-all: \
	$(BUILT_SOURCES) \
	libdriveiec \
	libdriveiecieee \
	libdriveiecplus4exp \
	libdrivetcbm \
	libdrive \
	libvdrive \
	libraster \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libplus4 \
	libvideo \
	libsid \
	libarch \
	libmonitor \
	libdiskimage \
	libiecbus \
	libserial \
	libfsdevice \
	libtape \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	libuserport \
	libresid \
	libresidfp \
	xplus4$(EXEEXT)

.PHONY: xcbm2-all
xcbm2-all: \
	$(BUILT_SOURCES) \
	libcbm2 \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libarch \
	libsid \
	libresid \
	libresidfp \
	libdriveiecieee \
	libdriveieee \
	libdrive \
	libparallel \
	libvdrive \
	libraster \
	libcrtc \
	libvideo \
	libmonitor \
	libdiskimage \
	libserial \
	libfsdevice \
	libtape \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	libuserport \
	xcbm2$(EXEEXT)

.PHONY: xcbm5x0-all
xcbm5x0-all: \
	$(BUILT_SOURCES) \
	libcbm5x0 \
	libsounddrv \
	libgfxoutputdrv \
	libprinterdrv \
	librs232drv \
	libarch \
	libsid \
	libresid \
	libresidfp \
	libdriveiecieee \
	libdriveieee \
	libdrive \
	libparallel \
	libvdrive \
	libraster \
	libvicii \
	libvideo \
	libmonitor \
	libdiskimage \
	libserial \
	libfsdevice \
	libtape \
	libimagecontents \
	libfileio \
	libcore \
	librtc \
	libuserport \
	xcbm5x0$(EXEEXT)

# Special targets to build libraries in subdirectories.

.PHONY: libvsid libc64 libc64sc libc128 libc64dtv libc64dtvstubs libvic20 libpet libplus4 libcbm2 libcbm5x0
	libdrive libvdrive libprinterdrv librs232drv libgfxoutputdrv libsounddrv libdiskimage
	libfsdevice libtape libarch libvicii libviciisc libviciidtv libvdc libsid libcrtc
	libvideo libserial libparallel libcore libiecbus libfileio librtc libuserport
	libresid libresiddtv libresidfp

libarch:
	(cd arch && $(MAKE))
libc128:
	(cd c128 && $(MAKE))
libc64:
	(cd c64 && $(MAKE) libc64.a)
libc64sc:
	(cd c64 && $(MAKE) libc64sc.a)
libc64c128:
	(cd c64 && $(MAKE) libc64c128.a)
libc64c64dtv:
	(cd c64 && $(MAKE) libc64c64dtv.a)
libc64cart:
	(cd c64 && $(MAKE) libc64cart)
libc64cartsystem:
	(cd c64 && $(MAKE) libc64cartsystem)
libc64commoncart:
	(cd c64 && $(MAKE) libc64commoncart)
libc64dtv:
	(cd c64dtv && $(MAKE) libc64dtv.a)
libc64dtvstubs:
	(cd c64dtv && $(MAKE) libc64dtvstubs.a)
libcbm2:
	(cd cbm2 && $(MAKE) libcbm2.a)
libcbm5x0:
	(cd cbm2 && $(MAKE) libcbm5x0.a)
libcore:
	(cd core && $(MAKE))
libcrtc:
	(cd crtc && $(MAKE))
libdiskimage:
	(cd diskimage && $(MAKE))
libdrive:
	(cd drive && $(MAKE))
libdriveiec:
	(cd drive && $(MAKE) libdriveiec)
libdriveiec128dcr:
	(cd drive && $(MAKE) libdriveiec128dcr)
libdriveiecc64exp:
	(cd drive/iec && $(MAKE) libdriveiecc64exp)
libdriveiecieee:
	(cd drive && $(MAKE) libdriveiecieee)
libdriveiecplus4exp:
	(cd drive/iec && $(MAKE) libdriveiecplus4exp)
libdriveieee:
	(cd drive && $(MAKE) libdriveieee)
libdrivetcbm:
	(cd drive && $(MAKE) libdrivetcbm)
libgfxoutputdrv:
	(cd gfxoutputdrv && $(MAKE))
libfileio:
	(cd fileio && $(MAKE))
libfsdevice:
	(cd fsdevice && $(MAKE))
libiecbus:
	(cd iecbus && $(MAKE))
libimagecontents:
	(cd imagecontents && $(MAKE))
libmascuerade:
	(cd vic20/cart && $(MAKE) libmascuerade.a)
libmonitor:
	(cd monitor && $(MAKE) libmonitor.a)
libparallel:
	(cd parallel && $(MAKE))
libpet:
	(cd pet && $(MAKE))
libplus4:
	(cd plus4 && $(MAKE))
libprinterdrv:
	(cd printerdrv && $(MAKE))
librs232drv:
	(cd rs232drv && $(MAKE))
libraster:
	(cd raster && $(MAKE) libraster.a)
librtc:
	(cd rtc && $(MAKE) librtc.a)
libresid:
	(cd resid && $(MAKE) libresid.a)
libresiddtv:
	(cd resid-dtv && $(MAKE) libresiddtv.a)
libresidfp:
	(cd resid-fp && $(MAKE) libresidfp.a)
libserial:
	(cd serial && $(MAKE))
libsid:
	(cd sid && $(MAKE) libsid.a)
libsounddrv:
	(cd sounddrv && $(MAKE))
libtape:
	(cd tape && $(MAKE))
libuserport:
	(cd userport && $(MAKE))
libvdc:
	(cd vdc && $(MAKE))
libvdrive:
	(cd vdrive && $(MAKE))
libvic20:
	(cd vic20 && $(MAKE))
libvic20cart:
	(cd vic20/cart && $(MAKE) libvic20cart.a)
libvicii:
	(cd vicii && $(MAKE) libvicii.a)
libviciidtv:
	(cd vicii && $(MAKE) libviciidtv.a)
libviciisc:
	(cd viciisc && $(MAKE) libviciisc.a)
libvideo:
	(cd video && $(MAKE))
libvsid:
	(cd c64 && $(MAKE) libvsid.a)

x64ow$(EXEEXT): x64$(EXEEXT)
	wrc -fe=x64ow$(EXEEXT) arch/win32/resc64.res x64$(EXEEXT)

x64dtvow$(EXEEXT): x64dtv$(EXEEXT)
	wrc -fe=x64dtvow$(EXEEXT) arch/win32/resc64dtv.res x64dtv$(EXEEXT)

x64scow$(EXEEXT): x64sc$(EXEEXT)
	wrc -fe=x64scow$(EXEEXT) arch/win32/resc64.res x64sc$(EXEEXT)

x128ow$(EXEEXT): x128$(EXEEXT)
	wrc -fe=x128ow$(EXEEXT) arch/win32/resc128.res x128$(EXEEXT)

xcbm2ow$(EXEEXT): xcbm2$(EXEEXT)
	wrc -fe=xcbm2ow$(EXEEXT) arch/win32/rescbm2.res xcbm2$(EXEEXT)

xcbm5x0ow$(EXEEXT): xcbm5x0$(EXEEXT)
	wrc -fe=xcbm5x0ow$(EXEEXT) arch/win32/rescbm5x0.res xcbm5x0$(EXEEXT)

xpetow$(EXEEXT): xpet$(EXEEXT)
	wrc -fe=xpetow$(EXEEXT) arch/win32/respet.res xpet$(EXEEXT)

xplus4ow$(EXEEXT): xplus4$(EXEEXT)
	wrc -fe=xplus4ow$(EXEEXT) arch/win32/resplus4.res xplus4$(EXEEXT)

xvicow$(EXEEXT): xvic$(EXEEXT)
	wrc -fe=xvicow$(EXEEXT) arch/win32/resvic20.res xvic$(EXEEXT)

vsidow$(EXEEXT): vsid$(EXEEXT)
	wrc -fe=vsidow$(EXEEXT) arch/win32/resvsid.res vsid$(EXEEXT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
